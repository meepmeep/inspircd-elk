input {

	beats { port => 5044 }
 
}

filter {

########## Logs from inspircd, send by filebeat #############
 if "ircd" in [tags] {

  grok {
   match => { "message" => [
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\sClient connecting on port\s(?<port>[^ ]+?)\s\(class\s%{WORD:class}\):\s(?<nick>[^ ]+?)\!(?<ident>[^ ]+?)@(?<hostuser>[^ ]+?)\s\(%{IP:ip}\)\s\[(?<realname>.*)\]$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\sClient connecting at\s(?<server>%{HOSTNAME}):\s(?<nick>[^ ]+?)\!(?<ident>[^ ]+?)@(?<hostuser>[^ ]+?)\s\(%{IP:ip}\)\s\[(?<realname>.*)\]$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\sUser\s(?<nick>[^ ]+?)\!(?<ident>[^ ]+?)@(?<hostuser>[^ ]+?)\s(?<action>.*)\s(?<channel>.*)$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\sClient exiting on server\s(?<server>%{HOSTNAME}):\s(?<nick>[^ ]+?)\!(?<ident>[^ ]+?)@(?<hostuser>[^ ]+?)\s\(%{IP:ip}\)\s\[(?<reason>.*):*\s*(?<message>.*)\]$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\sClient exiting:\s(?<nick>[^ ]+?)\!(?<ident>[^ ]+?)@(?<hostuser>[^ ]+?)\s\(%{IP:ip}\)\s\[(?<reason>.*):*\s*(?<message>.*)\]$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\s(?<operator>.+?(?= ))\s(?<action>.+?(?= )) timed\s(?<xlinetype>.+?(?= ))\sfor \*@(?<hostuser>.+?(?=,)), expires in (?<delay>.+?(?= ))\s\(on\s(?<timestampexpire>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\):\s(?<reason>.*)$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\s(?<xlinetype>.+?(?= ))\s(?<action>.+?(?= )) due to DNSBL match on %{IP:hostuser} to expire in (?<delay>.+?(?= ))\s\(on\s(?<timestampexpire>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\):\s(?<reason>.*)$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\s(?<operator>.+?(?= ))\s(?<action>.+?(?= )) timed\s(?<xlinetype>.+?(?= ))\sfor \*!\*@(?<hostuser>.+?(?=,)), expires in (?<delay>.+?(?= ))\s\(on\s(?<timestampexpire>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\):\s(?<reason>.*)$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\s(?<operator>.+?(?= ))\s(?<action>.+?(?= )) timed\s(?<xlinetype>.+?(?= ))\sfor %{IP:hostuser}, expires in (?<delay>.+?(?= ))\s\(on\s(?<timestampexpire>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\):\s(?<reason>.*)$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\s%{WORD:action}\sexpired (?<xlinetype>.+?(?= )) %{IP:hostuser}\s\(set by (?<operator>.+?(?= )) (?<delay>.+?(?= )) ago\): (?<reason>.*)$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\s%{WORD:action}\sexpired (?<xlinetype>.+?(?= )) \*!\*@%{IP:hostuser}\s\(set by (?<operator>.+?(?= )) (?<delay>.+?(?= )) ago\): (?<reason>.*)$',
    '^(<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{WORD:method}:\s%{WORD:action}\sexpired (?<xlinetype>.+?(?= )) \*@%{IP:hostuser}\s\(set by (?<operator>.+?(?= )) (?<delay>.+?(?= )) ago\): (?<reason>.*)$',
    '^(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{YEAR} %{TIME})\s%{GREEDYDATA:notparsedmsg}$'
   ] }

  }

  mutate {
    add_field => { "[@metadata][index]" => "%{[fields][ircd_index]}-%{+YYYY-MM}" }
    remove_field => [ "fields" ]
  }
  if ![server] and [method] == "CONNECT" or [method] == "QUIT" {
   mutate {
    add_field => {"server" => "<CHANGEME_name_of_local_server>" }
   }
  }

  if [method] == "CONNECT" or [method] == "REMOTECONNECT" {
    if [ip] =~ /:/ { mutate { add_field => { "ip_type" => "ipv6" } } } else { mutate { add_field => { "ip_type" => "ipv4" } } }  
  }

  date {
   locale => "en"
   match => ["timestamp", "EEE MMM dd yyyy HH:mm:ss"]
   target => "timestamp"
  }
  
  geoip {
   source => "hostuser"
  }
 }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "%{[@metadata][index]}"
 }
}

